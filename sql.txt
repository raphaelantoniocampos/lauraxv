Para migrar os dados dos usuários que já estão na tabela user e garantir que a confirmação funcione apenas com emails, você pode seguir um processo de migração dos dados. Abaixo está um plano detalhado para isso:
Plano de Migração
Passo 1: Adicionar o Campo email à Tabela confirmation

Adicione o campo email na tabela confirmation para armazenar o email do usuário durante a migração.

sql

ALTER TABLE confirmation ADD COLUMN email TEXT;

Passo 2: Preencher a Tabela confirmation com os Emails Existentes

Agora, você precisa copiar os emails dos usuários que já possuem confirmação. Supondo que a tabela confirmation já tenha registros e que cada user_id em confirmation esteja relacionado corretamente com a tabela user, você pode fazer algo assim:

sql

UPDATE confirmation
SET email = (
    SELECT email 
    FROM user 
    WHERE user.id = confirmation.user_id
);

Esse comando atualiza todos os registros da tabela confirmation com o email correspondente da tabela user.
Passo 3: Configurar Restrição de Unicidade para o Email (Opcional)

Se quiser garantir que o email na confirmação seja único (caso apenas uma confirmação por email seja permitida), você pode adicionar uma restrição de unicidade:

sql

CREATE UNIQUE INDEX idx_confirmation_email ON confirmation(email);

Passo 4: Ajustar o Código para Usar o Email

Após a migração, você pode remover a dependência do user_id e alterar seu backend para trabalhar diretamente com o campo email na tabela confirmation.

    Remover a coluna user_id da tabela confirmation (Opcional):

    sql

ALTER TABLE confirmation DROP COLUMN user_id;

Somente faça isso se não precisar mais dessa associação!

Ajuste as consultas SQL para validar diretamente com o email:

sql

    SELECT * FROM confirmation WHERE email = ?;

Backup e Testes

Antes de executar essas alterações em produção:

    Faça backup do banco de dados atual.
    Teste o script de migração em um ambiente de desenvolvimento ou com uma cópia do banco.

Conclusão

Com esses passos:

    Os emails dos usuários existentes serão migrados para a tabela confirmation.
    A tabela confirmation passará a funcionar com o email como chave principal.
    O código no frontend e backend será simplificado, utilizando apenas o email para verificar e registrar confirmações.

Isso garante uma transição suave para o novo modelo sem perder os dados atuais.
